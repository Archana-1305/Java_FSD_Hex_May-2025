package com.payrollmanagement.easypay.service;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.payrollmanagement.easypay.enums.PayrollRunStatus;
import com.payrollmanagement.easypay.model.Employee;
import com.payrollmanagement.easypay.model.PayrollPolicy;
import com.payrollmanagement.easypay.model.PayrollRun;
import com.payrollmanagement.easypay.repository.AttendanceRecordRepository;
import com.payrollmanagement.easypay.repository.EmployeeMonthlyAllowancesRepository;
import com.payrollmanagement.easypay.repository.EmployeeRepository;
import com.payrollmanagement.easypay.repository.IncomeTaxSlabRepository;
import com.payrollmanagement.easypay.repository.PayrollPolicyRepository;
import com.payrollmanagement.easypay.repository.PayrollRunRepository;

@Service
public class PayrollRunService {

    @Autowired private PayrollRunRepository payrollRunRepository;
    @Autowired private EmployeeRepository employeeRepository;
    @Autowired private AttendanceRecordRepository attendanceRecordRepository;
    @Autowired private EmployeeMonthlyAllowancesRepository employeeMonthlyAllowancesRepository;
    @Autowired private PayrollPolicyRepository payrollPolicyRepository;
    @Autowired private PayslipService payslipService;
    @Autowired private IncomeTaxSlabRepository incomeTaxSlabRepository;

    public PayrollRun executePayrollRun(int month, int year, int payrollPolicyId) {
        PayrollRun payrollRun = new PayrollRun();
        payrollRun.setMonth(month);
        payrollRun.setYear(year);
        payrollRun.setExecutionDate(LocalDate.now());
        payrollRun.setStatus(PayrollRunStatus.PENDING);
        PayrollPolicy policy = payrollPolicyRepository.findById(payrollPolicyId)
                .orElseThrow(() -> new RuntimeException("Payroll Policy not found"));
        payrollRun.setPayrollPolicy(policy);
        payrollRunRepository.save(payrollRun);

        List<Employee> employees = employeeRepository.findByStatus("ACTIVE");
        for (Employee emp : employees) {
            payslipService.generatePayslipForEmployee(emp, month, year, payrollRun, policy);
        }
        return payrollRun;
    }

    public PayrollRun updateStatus(int payrollRunId, PayrollRunStatus status) {
        Optional<PayrollRun> optionalRun = payrollRunRepository.findById(payrollRunId);
        if (optionalRun.isPresent()) {
            PayrollRun run = optionalRun.get();
            run.setStatus(status);
            return payrollRunRepository.save(run);
        }
        throw new RuntimeException("PayrollRun not found");
    }