package com.payrollmanagement.easypay.controller;

import com.payrollmanagement.easypay.model.LeaveRequest;
import com.payrollmanagement.easypay.service.LeaveRequestService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/leave-request")
@CrossOrigin(origins = "http://localhost:5173")
public class LeaveRequestController {

    @Autowired
    private LeaveRequestService leaveRequestService;

    @PostMapping("/apply/{employeeId}/{leaveTypeId}/{approverId}")
    public ResponseEntity<LeaveRequest> applyForLeave(
            @PathVariable int employeeId,
            @PathVariable int leaveTypeId,
            @PathVariable int approverId,
            @RequestBody LeaveRequest leaveRequest) {
        return ResponseEntity.status(201)
                .body(leaveRequestService.applyForLeave(employeeId, leaveTypeId, approverId, leaveRequest));
    }

    @GetMapping("/get/{id}")
    public ResponseEntity<LeaveRequest> getLeaveRequestById(@PathVariable int id) {
        return ResponseEntity.ok(leaveRequestService.getLeaveRequestById(id));
    }

    @GetMapping("/getAll")
    public ResponseEntity<List<LeaveRequest>> getAllLeaveRequests() {
        return ResponseEntity.ok(leaveRequestService.getAllLeaveRequests());
    }

    @GetMapping("/employee/{employeeId}")
    public ResponseEntity<List<LeaveRequest>> getLeaveRequestsByEmployee(@PathVariable int employeeId) {
        return ResponseEntity.ok(leaveRequestService.getLeaveRequestsByEmployee(employeeId));
    }

    @GetMapping("/remaining/{employeeId}/{year}")
    public ResponseEntity<Map<String, Integer>> getRemainingLeaves(
            @PathVariable int employeeId,
            @PathVariable int year) {
        return ResponseEntity.ok(leaveRequestService.getRemainingLeavesByEmployee(employeeId, year));
    }

    @PutMapping("/approve/{leaveRequestId}/{approverId}")
    public ResponseEntity<LeaveRequest> approveLeave(
            @PathVariable int leaveRequestId,
            @PathVariable int approverId) {
        return ResponseEntity.ok(leaveRequestService.approveLeaveRequest(leaveRequestId, approverId));
    }

    @PutMapping("/reject/{leaveRequestId}/{approverId}")
    public ResponseEntity<LeaveRequest> rejectLeave(
            @PathVariable int leaveRequestId,
            @PathVariable int approverId,
            @RequestParam String rejectionReason) {
        return ResponseEntity.ok(leaveRequestService.rejectLeaveRequest(leaveRequestId, approverId, rejectionReason));
    }
}