package com.payrollmanagement.easypay.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.payrollmanagement.easypay.enums.PayrollRunStatus;
import com.payrollmanagement.easypay.model.PayrollRun;
import com.payrollmanagement.easypay.model.Payslip;
import com.payrollmanagement.easypay.service.PayrollRunService;

@RestController
@RequestMapping("/api/payroll")
@CrossOrigin(origins = "http://localhost:5173")
public class PayrollRunController {
    @Autowired
    private PayrollRunService payrollRunService;

    @PostMapping("/run")
    public ResponseEntity<PayrollRun> runPayroll(@RequestParam int month, @RequestParam int year, @RequestParam int policyId) {
        PayrollRun run = payrollRunService.executePayrollRun(month, year, policyId);
        return ResponseEntity.ok(run);
    }

    @PutMapping("/{id}/status")
    public ResponseEntity<PayrollRun> updateStatus(@PathVariable int id, @RequestParam PayrollRunStatus status) {
        PayrollRun run = payrollRunService.updateStatus(id, status);
        return ResponseEntity.ok(run);
    }
    
    @PostMapping("/run-by-department")
    public ResponseEntity<PayrollRun> runPayrollByDepartment(
            @RequestParam int month,
            @RequestParam int year,
            @RequestParam int policyId,
            @RequestParam int departmentId) {
        PayrollRun run = payrollRunService.executePayrollRunByDepartment(month, year, policyId, departmentId);
        return ResponseEntity.ok(run);
    }
    
    @PostMapping("/revise")
    public ResponseEntity<?> revisePayroll(@RequestParam int month,
            @RequestParam int year,@RequestParam int departmentId) {
    	
        return ResponseEntity.ok(payrollRunService.revisePayroll(month,year,departmentId));
    }
    
    @GetMapping("/revise/payslips")
    public ResponseEntity<List<Payslip>> getPayslipsForRevision(
            @RequestParam int month,
            @RequestParam int year,
            @RequestParam int departmentId) {
        return ResponseEntity.ok(payrollRunService.getPayslipsForRevision(month, year, departmentId));
    }
}